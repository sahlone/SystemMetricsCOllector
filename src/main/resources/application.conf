systemMetrics{
    metricsPublishDelay = 1s
    metricsPublishDelay = ${?METRICS_PUBLISH_DELAY}
    enableConsumer = true
    enableConsumer = ${?ENABLE_CONSUMER}
    enableProducer = true
    enableConsumer = ${?ENABLE_PRODUCER}
    dbConfig {
        jdbcUrl = ${?JDBC_URL}
        username = ${?DB_USER}
        password = ${?DB_PW}
    }
    kafkaProducer {
        bootstrapServers = ${?KAFKA_BOOTSTRAP_SERVERS}
        clientId = "system-metrics-app"
        topic = ${?SYSTEM_METRICS_TOPIC},
        idempotence = "true",
        lingerMs = 1000,

        // override in case of tuning
        clientId = ${?METRICS_CLIENT_ID}
        idempotence = ${?ENABLE_IDEMPOTENCE}
        lingerMs = ${?LINGER_MS}
    }
    kafkaConsumer {
        bootstrapServers: ${?KAFKA_BOOTSTRAP_SERVERS}
        groupId = "system-metrics-app"
        topic = ${?SYSTEM_METRICS_TOPIC},
        offsetReset = "Latest",
        sessionTimeoutMs = 10000,
        maxPollRecords = 1,
        heartbeatIntervalMs = 2000,
        autoCommit = false,
        maxPollIntervalMs = 10000,
        pollsPerCommit = 10,

        // override in case of tuning
        groupId = ${?KAFKA_GROUP_ID},
        autoOffsetReset = ${?KAFKA_AUTO_OFFSET_RESET},
        sessionTimeoutMs = ${?KAFKA_SESSION_TIMEOUT_MS},
        maxPollRecords = ${?KAFKA_MAX_POLL_RECORDS},
        heartbeatIntervalMs = ${?KAFKA_HEARTBEAT_INTERVAL_MS},
        requestTimeoutMs = ${?KAFKA_REQUEST_TIMEOUT_MS},
        autoCommit = ${?KAFKA_AUTO_COMMIT},
        maxPollIntervalMs = ${?KAFKA_MAX_POLL_INTERVAL_MS},
        minPollsPerCommit = ${?KAFKA_MIN_POLLS_PER_COMMIT},
    }
}
